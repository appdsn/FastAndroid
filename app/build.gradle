apply plugin: 'com.android.application'
apply plugin: 'channel'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "com.appdsn.fastdev"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionName rootProject.ext.versionName
        versionCode rootProject.ext.versionCode
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a', 'armeabi'
        }
        /*解决ARouter::Compiler >>> No module name编译报错*/
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true/*tinker编译报错*/
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        packagingOptions {
            //解决编译时 More than one file was found with OS independent path 'META-INF/rxjava.properties'错误
            exclude 'META-INF/rxjava.properties'
        }

        //个推
        buildConfigField("String", "GETUI_APP_ID", "\""+GETUI_APP_ID+"\"")
        buildConfigField("String", "GETUI_APP_KEY", "\""+GETUI_APP_KEY+"\"")
        buildConfigField("String", "GETUI_APP_SECRET", "\""+GETUI_APP_SECRET+"\"")
        buildConfigField("String", "XIAOMI_APP_ID", "\""+XIAOMI_APP_ID+"\"")
        buildConfigField("String", "XIAOMI_APP_KEY", "\""+XIAOMI_APP_KEY+"\"")
        buildConfigField("String", "OPPO_APP_KEY", "\""+OPPO_APP_KEY+"\"")
        buildConfigField("String", "OPPO_APP_SECRET", "\""+OPPO_APP_SECRET+"\"")
        buildConfigField("String", "VIVO_APP_ID", "\""+VIVO_APP_ID+"\"")
        buildConfigField("String", "VIVO_APP_KEY", "\""+VIVO_APP_KEY+"\"")
        buildConfigField("String", "MEIZU_APP_ID", "\""+MEIZU_APP_ID+"\"")
        buildConfigField("String", "MEIZU_APP_KEY", "\""+MEIZU_APP_KEY+"\"")
        buildConfigField("String", "HUAWEI_APP_ID", "\""+HUAWEI_APP_ID+"\"")
        manifestPlaceholders = [
                GETUI_APP_ID : GETUI_APP_ID,
                GETUI_APP_KEY : GETUI_APP_KEY,
                GETUI_APP_SECRET : GETUI_APP_SECRET,

                XIAOMI_APP_ID   : XIAOMI_APP_ID,
                XIAOMI_APP_KEY  : XIAOMI_APP_KEY,

                OPPO_APP_KEY   : OPPO_APP_KEY,
                OPPO_APP_SECRET  : OPPO_APP_SECRET,

                VIVO_APP_ID   : VIVO_APP_ID,
                VIVO_APP_KEY  : VIVO_APP_KEY,

                MEIZU_APP_ID    : MEIZU_APP_ID,
                MEIZU_APP_KEY   : MEIZU_APP_KEY,

                HUAWEI_APP_ID   : HUAWEI_APP_ID
        ]
    }

    signingConfigs {
        release {
            storeFile file("noblemetal.jks")
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
            v2SigningEnabled false
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
        incremental false
    }
}

rebuildChannel {
    //指定渠道文件
    channelFile = file("../channel.txt")
    //渠道名会替换基础包名称里的base字符串
    baseReleaseApk = new File(project.projectDir, "../release/app-release.apk")

    //Release渠道包输出目录
    releaseOutputDir = new File(project.projectDir, "build/channel")

    //快速模式：生成渠道包时不进行校验（速度可以提升10倍以上，默认为false）
    isFastMode = false
    //低内存模式（仅针对V2签名，默认为false）：只把签名块、中央目录和EOCD读取到内存，不把最大头的内容块读取到内存，在手机上合成APK时，可以使用该模式
    lowMemory = false
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    api project(':common_base')

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    annotationProcessor 'com.alibaba:arouter-compiler:latest.release'
}
